- name: Set timezone to Europe/Berlin
  shell: timedatectl set-timezone Europe/Berlin

- name: Update apt-get repo and cache
  apt: update_cache=yes force_apt_get=yes cache_valid_time=3600
  
- name: Upgrade all apt packages
  apt: upgrade=dist force_apt_get=yes

- name: Check if a reboot is needed for OS (Debian or Ubuntu)
  register: reboot_required_file
  stat: path=/var/run/reboot-required get_md5=no

- name: Reboot Server if Kernel Update exists
  reboot:
    msg: "Reboot initiated by Ansible due to kernel updates"
    connect_timeout: 5
    reboot_timeout: 300
    pre_reboot_delay: 0
    post_reboot_delay: 30
    test_command: uptime
  when: reboot_required_file.stat.exists

- name: Install System Requirements
  apt:
    name: "{{ item }}"
    state: latest
  with_items: 
    - curl
    - git
    - build-essential
    - python3-dev
    - python3-pip
    - python3-venv
    - docker.io
    - docker-compose

- name: Verify Docker Command
  shell: command -v docker >/dev/null 2>&1
  ignore_errors: true
  register: docker_exists

- debug: msg="{{ docker_exists.rc }}"

- name: Trigger docker install script if docker not running
  shell: echo "Docker command"
  when: docker_exists.rc != 0
  notify: exec docker script

- name: Install Grafana Loki Docker Plugin
  shell: docker plugin install grafana/loki-docker-driver:latest --alias loki --grant-all-permissions
  ignore_errors: true

- name: Verify Docker Compose Command
  shell: command -v docker-compose >/dev/null 2>&1
  ignore_errors: true
  register: docker_compose_exists

- debug: msg="{{ docker_compose_exists.rc }}"

- name: Install docker-compose for Python 3 using pip3
  shell: echo "Install Docker Compose"
  when: docker_compose_exists.rc != 0
  notify: install docker compose